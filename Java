<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Vote buttons
        const voteForButton = document.getElementById('vote-for');
        const voteAgainstButton = document.getElementById('vote-against');

        // Chat elements
        const chatMessages = document.getElementById('chat-messages');
        const messageInput = document.getElementById('message-input');
        const sendMessageButton = document.getElementById('send-message');

        // Objection system
        const raiseObjectionButton = document.getElementById('raise-objection');
        const objectionHistory = document.getElementById('objection-history');

        // Sample debater information
        const debaterAInfo = document.getElementById('debater-information-a');
        const debaterBInfo = document.getElementById('debater-information-b');

        // Vote counters
        let votesForA = 0;
        let votesAgainstB = 0;

        // Vote buttons click events
        voteForButton.addEventListener('click', function () {
            votesForA++;
            updateVoteCount();
        });

        voteAgainstButton.addEventListener('click', function () {
            votesAgainstB++;
            updateVoteCount();
        });

        // Send message button click event
        sendMessageButton.addEventListener('click', function () {
            const userMessage = messageInput.value.trim();
            if (userMessage !== '') {
                appendChatMessage('User', userMessage);
                messageInput.value = ''; // Clear the input field after sending
            }
        });

        // Raise objection button click event
        raiseObjectionButton.addEventListener('click', function () {
            const objectionMessage = 'Objection raised!';
            appendObjectionHistory(objectionMessage);
        });

        // Function to update the vote count
        function updateVoteCount() {
            const votesInfo = document.getElementById('votes-info');
            votesInfo.textContent = `Votes: Debater A - ${votesForA} | Debater B - ${votesAgainstB}`;
        }

        // Function to append a chat message
        function appendChatMessage(user, message) {
            const chatMessage = document.createElement('p');
            chatMessage.innerHTML = `<strong>${user}:</strong> ${message}`;
            chatMessages.appendChild(chatMessage);
            // Scroll to the bottom to show the latest message
            chatMessages.scrollTop = chatMessages.scrollHeight;
        }

        // Function to append an objection to the history
        function appendObjectionHistory(objectionMessage) {
            const objectionItem = document.createElement('p');
            objectionItem.textContent = objectionMessage;
            objectionHistory.appendChild(objectionItem);
            // Scroll to the bottom to show the latest objection
            objectionHistory.scrollTop = objectionHistory.scrollHeight;
        }

        // Initial vote count
        updateVoteCount();
    });
</script>
</body>
</html>
